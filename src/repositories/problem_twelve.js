const ProblemTwelve = {
  title: 'Highly Divisible Triangular Number',
  goal: 500,
  solution: (goal) => {
    let currentTriangleNumber = 1;
    let counter = 1
    while (true) {
      let factors = findFactorsOf(currentTriangleNumber);
      if (factors.length > goal) {
        break;
      } else {
        counter++;
        currentTriangleNumber += counter;
      }
    } //end while

    function findFactorsOf(int) {
      let factors = [];
      let possibleFactor = 1;
      let sqrt = Math.sqrt(int);
      while(possibleFactor <= sqrt){
          if(int % possibleFactor == 0){
              factors[factors.length] = possibleFactor;
              let otherPossibleFactor = int / possibleFactor;
              if(otherPossibleFactor > possibleFactor){
                  factors[factors.length] = otherPossibleFactor;
              }
          }
          possibleFactor++;
      }
      return factors;
    }
    return currentTriangleNumber;
  },
  description: `
    The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:/n
    1, 3, 6, 10, 15, 21, 28, 36, 45, 55, .../n
    Let us list the factors of the first seven triangle numbers:/n
    1: 1/n
    3: 1,3/n
    6: 1,2,3,6/n
    10: 1,2,5,10/n
    15: 1,3,5,15/n
    21: 1,3,7,21/n
    28: 1,2,4,7,14,28/n
    We can see that 28 is the first triangle number to have over five divisors./n
    What is the value of the first triangle number to have over five hundred divisors?/n
    `,
  href: 'https://projecteuler.net/problem=12'
}

export default ProblemTwelve;
